<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="UI_Debug|Win32">
      <Configuration>UI_Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\browser\application.h" />
    <ClInclude Include="src\browser\browser.h" />
    <ClInclude Include="src\browser\deferred.h" />
    <ClInclude Include="src\browser\jsvalue.h" />
    <ClInclude Include="src\browser\render_process_handler.h" />
    <ClInclude Include="src\browser\util.h" />
    <ClInclude Include="src\constants\runtime_file_paths.h" />
    <ClInclude Include="src\constants\vector.h" />
    <ClInclude Include="src\editor\editor.h" />
    <ClInclude Include="src\game.h" />
    <ClInclude Include="src\input.h" />
    <ClInclude Include="src\lib\simple_file_watcher\FileWatcher.h" />
    <ClInclude Include="src\lib\simple_file_watcher\FileWatcherImpl.h" />
    <ClInclude Include="src\lib\simple_file_watcher\FileWatcherLinux.h" />
    <ClInclude Include="src\lib\simple_file_watcher\FileWatcherOSX.h" />
    <ClInclude Include="src\lib\simple_file_watcher\FileWatcherWin32.h" />
    <ClInclude Include="src\main_loop.h" />
    <ClInclude Include="src\player.h" />
    <ClInclude Include="src\rendering\camera.h" />
    <ClInclude Include="src\rendering\color.h" />
    <ClInclude Include="src\rendering\gl_rendering\binder.h" />
    <ClInclude Include="src\rendering\gl_rendering\buffer.h" />
    <ClInclude Include="src\rendering\gl_rendering\program.h" />
    <ClInclude Include="src\rendering\gl_rendering\shader.h" />
    <ClInclude Include="src\rendering\gl_rendering\error.h" />
    <ClInclude Include="src\rendering\gl_rendering\vertex_array_object.h" />
    <ClInclude Include="src\rendering\gl_rendering\vertex_buffer_object.h" />
    <ClInclude Include="src\rendering\mesh.h" />
    <ClInclude Include="src\rendering\pixel_data_type.h" />
    <ClInclude Include="src\rendering\pixel_format.h" />
    <ClInclude Include="src\rendering\quad.h" />
    <ClInclude Include="src\rendering\renderer.h" />
    <ClInclude Include="src\rendering\texture.h" />
    <ClInclude Include="src\rendering\vertex.h" />
    <ClInclude Include="src\spatial\axially_aligned\plane.h" />
    <ClInclude Include="src\spatial\axially_aligned\voxel.h" />
    <ClInclude Include="src\spatial\chunk.h" />
    <ClInclude Include="src\spatial\chunk_vault.h" />
    <ClInclude Include="src\spatial\intersection.h" />
    <ClInclude Include="src\spatial\offset.h" />
    <ClInclude Include="src\spatial\orientation.h" />
    <ClInclude Include="src\spatial\ray.h" />
    <ClInclude Include="src\spatial\rect_size.h" />
    <ClInclude Include="src\spatial\transform.h" />
    <ClInclude Include="src\spatial\utility.h" />
    <ClInclude Include="src\ui.h" />
    <ClInclude Include="src\units.h" />
    <ClInclude Include="src\utility\filesystem.h" />
    <ClInclude Include="src\utility\functional.h" />
    <ClInclude Include="src\utility\numerical.h" />
    <ClInclude Include="src\utility\serialization.h" />
    <ClInclude Include="src\window.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\game.cpp" />
    <ClCompile Include="src\lib\simple_file_watcher\FileWatcher.cpp" />
    <ClCompile Include="src\lib\simple_file_watcher\FileWatcherLinux.cpp" />
    <ClCompile Include="src\lib\simple_file_watcher\FileWatcherOSX.cpp" />
    <ClCompile Include="src\lib\simple_file_watcher\FileWatcherWin32.cpp" />
    <ClCompile Include="src\rendering\gl_rendering\buffer.cpp" />
    <ClCompile Include="src\rendering\gl_rendering\program.cpp" />
    <ClCompile Include="src\browser\application.cpp" />
    <ClCompile Include="src\browser\browser.cpp" />
    <ClCompile Include="src\browser\deferred.cpp" />
    <ClCompile Include="src\browser\jsvalue.cpp" />
    <ClCompile Include="src\browser\render_process_handler.cpp" />
    <ClCompile Include="src\browser\util.cpp" />
    <ClCompile Include="src\constants\runtime_file_paths.cpp" />
    <ClCompile Include="src\constants\vector.cpp" />
    <ClCompile Include="src\editor\editor.cpp" />
    <ClCompile Include="src\input.cpp" />
    <ClCompile Include="src\main.cpp" />
    <ClCompile Include="src\player.cpp" />
    <ClCompile Include="src\rendering\camera.cpp" />
    <ClCompile Include="src\rendering\color.cpp" />
    <ClCompile Include="src\rendering\gl_rendering\shader.cpp" />
    <ClCompile Include="src\rendering\gl_rendering\error.cpp" />
    <ClCompile Include="src\rendering\gl_rendering\vertex_array_object.cpp" />
    <ClCompile Include="src\rendering\gl_rendering\vertex_buffer_object.cpp" />
    <ClCompile Include="src\rendering\mesh.cpp" />
    <ClCompile Include="src\rendering\quad.cpp" />
    <ClCompile Include="src\rendering\texture.cpp" />
    <ClCompile Include="src\rendering\vertex.cpp" />
    <ClCompile Include="src\spatial\axially_aligned\plane.cpp" />
    <ClCompile Include="src\spatial\axially_aligned\voxel.cpp" />
    <ClCompile Include="src\spatial\chunk.cpp" />
    <ClCompile Include="src\spatial\chunk_vault.cpp" />
    <ClCompile Include="src\spatial\orientation.cpp" />
    <ClCompile Include="src\spatial\transform.cpp" />
    <ClCompile Include="src\spatial\ray.cpp" />
    <ClCompile Include="src\ui.cpp" />
    <ClCompile Include="src\utility\filesystem.cpp" />
    <ClCompile Include="src\window.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ResourceFiles Include="resources\**\*" />
  </ItemGroup>
  <ItemGroup>
    <DebugDllFiles Include="lib\bin\debug\*.dll" />
  </ItemGroup>
  <ItemGroup>
    <DebugExeFiles Include="lib\bin\debug\*.exe" />
  </ItemGroup>
  <ItemGroup>
    <None Include="src\shaders\test\test.frag" />
    <None Include="src\shaders\test\test.vert" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{278E7F88-EEC1-4890-9995-0F89AFE54C9F}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>VoxelEngine</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='UI_Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='UI_Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <SourcePath>
    </SourcePath>
    <IncludePath>$(ProjectDir)\include;$(ProjectDir)\lib\include;$(SourcePath);$(IncludePath)</IncludePath>
    <LibraryPath>$(ProjectDir)\lib\bin\debug;$(LibraryPath)</LibraryPath>
    <CustomBuildAfterTargets>Build</CustomBuildAfterTargets>
    <CustomBuildBeforeTargets>
    </CustomBuildBeforeTargets>
    <PostBuildEventUseInBuild>true</PostBuildEventUseInBuild>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='UI_Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <SourcePath />
    <IncludePath>$(ProjectDir)\include;$(ProjectDir)\lib\include;$(SourcePath);$(IncludePath)</IncludePath>
    <LibraryPath>$(ProjectDir)\lib\bin\debug;$(LibraryPath)</LibraryPath>
    <CustomBuildAfterTargets>Build</CustomBuildAfterTargets>
    <CustomBuildBeforeTargets />
    <PostBuildEventUseInBuild>true</PostBuildEventUseInBuild>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(ProjectDir)\include;$(ProjectDir)\lib\include;$(IncludePath)</IncludePath>
    <LibraryPath>$(ProjectDir)\lib\bin\release;$(LibraryPath)</LibraryPath>
    <CustomBuildAfterTargets>Build</CustomBuildAfterTargets>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>comctl32.lib;shlwapi.lib;libcef_dll_wrapper.lib;libcef.lib;glfw3_debug.lib;opengl32.lib;glu32.lib;libboost_filesystem-vc120-sgd-1_55.lib;glew32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>echo UI Build Step
cd ui

echo Installing UI dependencies
CMD /C npm install

node needs-building debug
if %errorlevel% == -1 (
    mimosa build -o -P debug-build
)</Command>
      <Outputs>non_existant_always_runs.txt</Outputs>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='UI_Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>UI_LOCALHOST;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>comctl32.lib;shlwapi.lib;libcef.lib;libcef_dll_wrapper.lib;glfw3_debug.lib;opengl32.lib;glu32.lib;libboost_filesystem-vc120-sgd-1_55.lib;glew32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Command>
      </Command>
      <Outputs>non_existant_always_runs.txt</Outputs>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>comctl32.lib;shlwapi.lib;libcef_dll_wrapper.lib;libcef.lib;glfw3.lib;opengl32.lib;glu32.lib;boost_filesystem.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <CustomBuildStep>
      <Outputs>non_existant_always_runs.txt</Outputs>
      <Command>echo UI Build Step
cd ui

echo Installing UI dependencies
CMD /C npm install

node needs-building release
if %errorlevel% == -1 (
    mimosa build -o -P release-build
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <Target Name="AfterBuild">
    <Copy SourceFiles="@(ResourceFiles)" DestinationFolder="$(OutDir)%(RecursiveDir)" SkipUnchangedFiles="true">
      <Output TaskParameter="CopiedFiles" ItemName="SuccessfullyCopiedFiles" />
    </Copy>
    <Copy SourceFiles="@(DebugDllFiles)" DestinationFolder="$(OutDir)%(RecursiveDir)" SkipUnchangedFiles="true">
      <Output TaskParameter="CopiedFiles" ItemName="SuccessfullyCopiedFiles" />
    </Copy>
    <Copy SourceFiles="@(DebugExeFiles)" DestinationFolder="$(OutDir)%(RecursiveDir)" SkipUnchangedFiles="true">
      <Output TaskParameter="CopiedFiles" ItemName="SuccessfullyCopiedFiles" />
    </Copy>
  </Target>
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>